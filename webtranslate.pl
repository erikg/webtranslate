#!/usr/bin/perl
# webtranslate.pl
# (C) 2000 Erik Greenwald <erik@smluc.org>
# released under the GPL v2 or better.

use CGI;
use DBI;

# use lib qw(/usr/lib/cgi-bin/e/webtranslate/);

require "webtranslate.conf";

my $sth;
my @data;

$query = new CGI;
$action=$query->param("action");

my $dbh = DBI->connect("DBI:$DBMSTYPE:$DBMSDB;host=$DBMSHOST;port=$DBMSPORT", $DBMSUSER, $DBMSPASSWD)
	or die "no db\n";

sub sanitize	# convert the data package into something safe to display
{
	for($x = 0; $x<4; $x++)
	{
		$data[$x] =~ s/</&lt;/g;	# handle opening brackets
		$data[$x] =~ s/>/&gt;/g;	# handle closing brackets
		$data[$x] =~ s/\\n/\\n\n/g;	# parse the newlines out
	}
}

sub sendmail	# sent mail using the file handler SM
{
	# print out the mail info, comments, mime attachment info, etc.
	print SM "Reply-to: NO-REPLY\n";
	print SM "From: $WEBUSER\@$WEBHOST\n";
	print SM "To: $sendmailtarget\n";
	print SM "Subject: Webtranslate output: $progname $version $lang\n";
	print SM "\n";
	
	print SM "# PO file for $progname $version\n#\n";
	print SM "# automatically generated by webtranslation, available at\n";
	print SM "# http://math.smsu.edu/~br0ke\n#\n";
	print SM "#, fuzzy\nmsgid \"\"\nmsgstr \"\"\n";
	print SM "\"Project-Id-Version: $progname $version\\n\"\n";
	print SM "\"SM-Creation-Date: $initdate\\n\"\n";
	print SM "\"PO-Revision-Date: $date\\n\"\n";
	print SM "\"Last-Translator: $name <$email>\\n\"\n";
	print SM "\"Language-Team: $langteam\\n\"\n";
	print SM "\"MIME-Version: 1.0\\n\"\n";
	print SM "\"Content-Type: text/plain; charset=ISO-8859-1\\n\"\n";
	print SM "\"Content-Transfer-Encoding: 8-BITS\\n\"\n";
	$sth = $dbh->prepare("select reference,flag,msgid,msgstr from messages where id=$id order by reference")
		or die "couldn't prepare query of messages using id\n";
	$sth->execute();

	while(@data = $sth->fetchrow_array())
	{
		$data[2] =~ s/\r//g;	# strip out the ^M shit
		$data[3] =~ s/\r//g;
		$data[2] =~ s/\\n/\\n\n/g;
		$data[3] =~ s/\\n/\\n\n/g;
		@msgid = split('\n',$data[2]);
		@msgstr = split('\n',$data[3]);
		print SM "\n#: $data[0]\n";
		if($data[1] ne "")	# don't print if it's blank.
		{
			print SM "#, $data[1]\n";
		}

		
		if($#msgid == 0)
		{
			print SM "msgid \"$msgid[0]\"\n";
		}
		else
		{
			print SM "msgid \"\"\n";
			foreach $id (@msgid)
			{
				print SM "\"$id\"\n";
			}
		}
		if($#msgstr == 0)
		{
			print SM "msgstr \"$msgstr[0]\"\n";
		}
		else
		{
			print SM "msgstr \"\"\n";
			foreach $msgstr (@msgstr)
			{
				print SM "\"$msgstr\"\n";
			}
		}
	}
	$sth->finish();
	print "All done.\n";
}

#display header
print "Content-type: text/html\n\n";

open(HEADER, "webtranslate.header");
while(<HEADER>)
{
	print $_;
}

print "\n\n<!-- this page generated by WebTranslator (C) 2000 Erik Greenwald";
print "     http://math.smsu.edu/~br0ke/webtranslator <erik\@smluc.org> -->\n\n";

##############################################################################

if( $action eq "showprogs")
{
	$sth = $dbh->prepare("select program,version from session group by program order by program asc");
	$sth->execute();
	print "<TABLE>\n";
	while(@data = $sth->fetchrow_array())
	{
	        print "<TR><TD><A HREF=\"webtranslate.pl?action=showreflang\&prog=$data[0]\&version=$data[1]\">$data[0]</A></TD><TD>$data[1]</TD></TR>\n";
	}
	print "</TABLE>\n";
	$sth->finish();
}

##############################################################################

elsif( $action eq "showreflang")
{
	$prog = $query->param("prog");
	$vers = $query->param("version");
	$sth = $dbh->prepare("select id,language from session where program='$prog' and version='$vers' group by language order by language asc");
	$sth->execute();
	while(@data = $sth->fetchrow_array())
	{
		print "<A HREF=\"webtranslate.pl?action=xlat\&reflan=$data[0]\&program=$prog\&version=$vers\">$data[1]</A><BR>";
	}
	$sth->finish();
}

##############################################################################

elsif( $action eq "xlat")
{
	$i = 0;
	
	$reflan = $query->param("reflan");
	$prog = $query->param("program");
	$vers = $query->param("version");
	$sth = $dbh->prepare("select reference,flag,msgid,msgstr from messages where id=$reflan order by reference");
	$sth->execute();

	open(HEADER, "webtranslate.inst");
	while(<HEADER>)
	{
		print $_;
	}

	print "\n\n<FORM METHOD=POST ACTION=\"webtranslate.pl\">\n";
	print "<INPUT TYPE=HIDDEN NAME=action VALUE=submit>\n";
	print "<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=2>\n";
	print "<TR><TD>Name</TD><TD><INPUT NAME=name></TD></TR>\n";
	print "<TR><TD>Email</TD><TD><INPUT NAME=email></TD></TR>\n";
	print "<TR><TD>Language</TD><TD><INPUT NAME=language></TD><TD>in locale format, like 'en_US'</TD></TR>\n";
	print "<TR><TD>Language Team</TD><TD><INPUT NAME=langteam></TD><TD>Name and Email</TD></TR>\n";
	print "</TABLE><BR>Program: $prog $vers\n";
	print "<BR><BR><HR>\n\n\n";
	print "<INPUT TYPE=HIDDEN NAME=program VALUE=$prog>\n";
	print "<INPUT TYPE=HIDDEN NAME=version VALUE=$vers>\n";
	while(@data = $sth->fetchrow_array())
	{
		sanitize();
		print "<INPUT TYPE=HIDDEN NAME=ref$i VALUE=$data[0]>\n";
		print "<INPUT TYPE=HIDDEN NAME=flag$i VALUE=$data[1]>\n";
		print "<INPUT TYPE=HIDDEN NAME=msgid$i VALUE=\"";
		if($data[3] eq "")
		{
			print "$data[2]\">\n<PRE>$data[2]</PRE>\n";
		}
		else
		{
			print "$data[2]\">\n<PRE>$data[3]</PRE>\n";
		}
		print "<TEXTAREA ROWS=2 COLS=60 NAME=\"msgstr$i\"></TEXTAREA><BR><HR><BR>\n\n";
		$i++;
	}
	print "<INPUT TYPE=HIDDEN NAME=entries VALUE=$i>\nComments:<BR>";
	print "<TEXTAREA ROWS=4 COLS=60 NAME=\"comments\"></TEXTAREA><BR><BR>\n";
	print "<INPUT TYPE=SUBMIT>\n</FORM>\n";
	$sth->finish();
}

##############################################################################

elsif( $action eq "submit" )
{
	$i = 0;
	$entries  = $query->param( "entries"  );
	$name     = $query->param( "name"     );
	$email    = $query->param( "email"    );
	$lang     = $query->param( "language" );
	$comments = $query->param( "comments" );
	$progname = $query->param( "program"  );
	$version  = $query->param( "version"  );
	$langteam = $query->param( "langteam" );
	

	$sth = $dbh->prepare("insert into session values (0,'$name','$email',NOW(),NOW(),'$progname','$version','$lang','$lang','$langteam','$comments','$email')")
		or die "couln't add vote\n";
	$sth->execute();
	$sth->finish();

	$sth = $dbh->prepare("select LAST_INSERT_ID()")
		or die "Couldn't do last_insert_id()\n";
	$sth->execute();
	@data = $sth->fetchrow_array();
	$id = $data[0];
	$sth->finish();
	
	while( $i < $entries )
	{
		$refs = $query->param("ref$i");
		$flags = $query->param("flag$i");
		$msgid = $query->param("msgid$i");
		$msgstr= $query->param("msgstr$i");

		chomp $refs;
		chomp $flags;
		chomp $msgid;
		chomp $msgstr;

		$msgid  =~ s/\r//g;	# this ordering is important. 
		$msgstr =~ s/\r//g;
		$msgid  =~ s/\n//g;
		$msgstr =~ s/\n//g;
		$msgid  =~ s/\\/\\\\/g;
		$msgstr =~ s/\\/\\\\/g;

		$sth = $dbh->prepare("insert into messages values ($id,'$refs','$flags','$msgid','$msgstr')")
			or die "couln't add entry\n";
		$sth->execute();
		$sth->finish();
		
		$i++;
	}

	# send emails
	print "| $SENDMAIL $email<BR>\n";
	open(SM, "| $SENDMAIL $email")
		or die "Cannot open mail for $email<BR>\n";
	$sendmailtarget = $email;
	sendmail();
	close(SM);

	print "| $SENDMAIL $maintaineremail<BR>\n";
	open(SM, "| $SENDMAIL $maintaineremail")
		or die "Cannot open email for $maintaineremail<BR>\n";
	$sendmailtarget = $maintaineremail;
	sendmail();
	close(SM);

	# print a thank you... 
	print "$lang translation for $progname $version successfully added to the database. Copies are being sent to the program maintainer and $email.<BR><BR>Thank you for your help, $name, your contribution helps make software better.<BR><BR>\n\n";
}

##############################################################################

else	# no action, lets display the program list.
{
	$sth = $dbh->prepare("select program,version from session group by program order by program asc");
	$sth->execute();
	print "<TABLE>\n";
	while(@data = $sth->fetchrow_array())
	{
	        print "<TR><TD><A HREF=\"webtranslate.pl?action=showreflang\&prog=$data[0]\&version=$data[1]\">$data[0]</A></TD><TD>$data[1]</TD></TR>\n";
	}
	print "</TABLE>\n";
	$sth->finish();
}

##############################################################################

$dbh->disconnect();


# display the footer

print "<!-- this is the end of the web translator generated HTML. -->\n\n";

open(FOOTER, "webtranslate.footer");
while(<FOOTER>)
{
	print $_;
}

0;
