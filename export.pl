#!/usr/bin/perl 

# export.pl for the webtranslate package
# Copyright (C) 2003-2010 Erik Greenwald <erik@smluc.org>
# released under the GPL v2 (or better). 
# This software comes with absofrikkinlutely no warrenty of any kind.
#
# this program creates a .po file from the database. It takes no arguments, 
# and requests the program name, version, and language interactively. It creates
# a file with the name being a concatenation of the language and ".po". The file
# will be functional, but bare. It will over-write files without asking.

use DBI;

require 'webtranslate.conf';

my $sth;
my @data;

my $id = 0;

my $name="";
my $email="";
my $date="";
my $comments="";

my $dbh = DBI->connect("DBI:$DBMSTYPE:$DBMSDB;host=$DBMSHOST;port=$DBMSPORT", $DBMSUSER, $DBMSPASSWD)
	or die "no db\n";

print "Program name: ";
$progname = <STDIN>;
print "Version: ";
$version = <STDIN>;
print "Language: ";
$lang = <STDIN>;

chomp $progname;
chomp $version;
chomp $lang;

$sth = $dbh->prepare("select id from session where program='$progname' and version='$version' and locale='$lang'")
        or die "couldn't prepare query using name/version/locale\n";
$sth->execute();
@data = $sth->fetchrow_array();
$id = $data[0];
$sth->finish();

if($id < 1)
{
	print "Whoa, either the program, version, or language was invalid.\n";
	print "I'm aborting.\n\n";
	exit -1;
}

$sth = $dbh->prepare("select name,email,date,initdate,langteam,comments from session where id=$id")
	or die "couldn't prepare query using id\n";
$sth->execute();
@data = $sth->fetchrow_array();
$sth->finish();
###### use the info from the session table

$name = $data[0];
$email = $data[1];
$date = $data[2];
$initdate = $data[3];
$langteam = $data[4];
$comments = $data[5];

if($langteam eq "")
{
	$langteam = "LANGUAGE <LL\@li.org>";
}

if($comments)
{
	print "This package has comments:\n\n$comments\n\n";
}

open(POT,">  $lang.po")
	or die "Couldn't open $lang.po for writing";

print POT "# PO file for $progname $version\n#\n";
print POT "# automatically generated by webtranslation, available at\n";
print POT "# http://math.smsu.edu/~br0ke\n#\n";
print POT "#, fuzzy\nmsgid \"\"\nmsgstr \"\"\n";
print POT "\"Project-Id-Version: $progname $version\\n\"\n";
print POT "\"POT-Creation-Date: $initdate\\n\"\n";
print POT "\"PO-Revision-Date: $date\\n\"\n";
print POT "\"Last-Translator: $name <$email>\\n\"\n";
print POT "\"Language-Team: $langteam\\n\"\n";
print POT "\"MIME-Version: 1.0\\n\"\n";
print POT "\"Content-Type: text/plain; charset=ISO-8859-1\\n\"\n";
print POT "\"Content-Transfer-Encoding: 8-BITS\\n\"\n";

##########################################

$sth = $dbh->prepare("select reference,flag,msgid,msgstr from messages where id=$id order by reference")
	or die "couldn't prepare query of messages using id\n";
$sth->execute();

while(@data = $sth->fetchrow_array())
{
	$data[2] =~ s/\r//g;	# strip out the ^M shit
	$data[3] =~ s/\r//g;
	$data[2] =~ s/\\n/\\n\n/g;
	$data[3] =~ s/\\n/\\n\n/g;
	@msgid = split('\n',$data[2]);
	@msgstr = split('\n',$data[3]);
	print POT "\n#: $data[0]\n";
	if($data[1] ne "")	# don't print if it's blank.
	{
		print POT "#, $data[1]\n";
	}

	
	if($#msgid == 0)
	{
		print POT "msgid \"$msgid[0]\"\n";
	}
	else
	{
		print POT "msgid \"\"\n";
		foreach $id (@msgid)
		{
			print POT "\"$id\"\n";
		}
	}
	if($#msgstr == 0)
	{
		print POT "msgstr \"$msgstr[0]\"\n";
	}
	else
	{
		print POT "msgstr \"\"\n";
		foreach $msgstr (@msgstr)
		{
			print POT "\"$msgstr\"\n";
		}
	}
}
$sth->finish();

close POT;

$dbh->disconnect();
exit 0;

